
#pragma kernel CSMain

struct Particle
{
	float3 position;
	float3 velocity;
};


RWTextureBuffer<Particle> magla;

float deltaTime;


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

	

	float distance = 0.3;
	float amplitude = 0.05;
	float speed = 0.5;
	float amount = 0.5;

	/*float3 delta = float3(mousePosition.xy, 0) - particleBuffer[id.x].position;
	float3 dir = normalize(delta);
	float sqlength = delta.x * delta.x + delta.y * delta.y + delta.z * delta.z;*/
	float sinusoida  += sin(speed * amplitude *id.y) * distance * amount;

	particleBuffer[id.x].velocity += 0.1f * sinusoida * id.x;
	particleBuffer[id.x].position += particleBuffer[id.x].velocity * deltaTime;

    //Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
